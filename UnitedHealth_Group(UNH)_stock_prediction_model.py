# -*- coding: utf-8 -*-
"""UnitedHealth Group(UNH)_Stock_Prediction_Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XT3mUxjSI5ePcwjLY4zmeLfHbO-FStGP
"""

!pip install yfinance

import pandas as pd

import yfinance as yf
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns



import yfinance as yf
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split

# Download data
df = yf.download("UNH", start="2018-01-01", end="2025-06-22")

# Calculate returns and direction
df['Return'] = df['Close'].pct_change()
df['Direction'] = np.where(df['Return'] > 0, 1, 0)

# Create lagged features
for i in range(1, 6):
    df[f'Return_Lag_{i}'] = df['Return'].shift(i)

# Drop rows with missing values (due to shifting)
df.dropna(inplace=True)

# Prepare features and target
X = df[[f'Return_Lag_{i}' for i in range(1, 6)]]
y = df['Direction']

# Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("Accuracy:",accuracy_score(y_test,y_pred))

conf_matrix = confusion_matrix(y_test, y_pred)
sns.heatmap(conf_matrix,annot=True,fmt="d")
plt.title("Confusion Matrix")
plt.show()

print(classification_report(y_test,y_pred))

df_test = df.iloc[-len(y_test):].copy()
df_test['Prediction'] = y_pred


plt.figure(figsize=(14, 4))
plt.plot(df_test.index, df_test['Direction'], label='Actual', linestyle='-', alpha=0.7)
plt.plot(df_test.index, df_test['Prediction'], label='Predicted', linestyle='--', alpha=0.7)
plt.title("Stock Movement Prediction (0 = Down, 1 = Up)")
plt.xlabel("Date")
plt.ylabel("Direction")
plt.legend()
plt.grid(True)
plt.show()